{"ast":null,"code":"var _jsxFileName = \"D:\\\\all projects\\\\reactproject\\\\todo_list\\\\src\\\\List.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TODO = () => {\n  _s();\n  const [List, setList] = useState();\n  const show = e => {\n    let data = e.target.value;\n    setList(data);\n  };\n  const addList = e => {\n    let data = e.target.value;\n    setList();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"heading\",\n          children: \"Welcome To my ToDo list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"item\",\n          onChange: show,\n          value: show.setList,\n          placeholder: \"Add Your List\",\n          className: \"srh\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: addList,\n          children: \" + \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: addList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(TODO, \"3Wd5aLZ9Jm3NUre5/0Dw0RbIsAc=\");\n_c = TODO;\nexport default TODO;\nvar _c;\n$RefreshReg$(_c, \"TODO\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TODO","_s","List","setList","show","e","data","target","value","addList","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","name","onChange","placeholder","autoComplete","onClick","_c","$RefreshReg$"],"sources":["D:/all projects/reactproject/todo_list/src/List.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst TODO = () => {\r\n\r\n    const [List, setList] = useState()\r\n\r\n    const show = (e) => {\r\n        let data = e.target.value\r\n        setList(data)\r\n    }\r\n\r\n    const addList = (e) => {\r\n        let data = e.target.value\r\n        setList()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='main_div'>\r\n                <div className='todo'>\r\n                    <br />\r\n                    <h1 className='heading'>Welcome To my ToDo list</h1>\r\n                    <br />\r\n                    <input type='text' name='item' onChange={show} value={show.setList} placeholder='Add Your List' className='srh' autoComplete=\"off\" />\r\n                    <button className='btn' onClick={addList}> + </button>\r\n                    <ol>\r\n                        <li>{addList}</li>\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TODO"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAElC,MAAMS,IAAI,GAAIC,CAAC,IAAK;IAChB,IAAIC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IACzBL,OAAO,CAACG,IAAI,CAAC;EACjB,CAAC;EAED,MAAMG,OAAO,GAAIJ,CAAC,IAAK;IACnB,IAAIC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IACzBL,OAAO,CAAC,CAAC;EACb,CAAC;EAED,oBACIN,OAAA,CAAAE,SAAA;IAAAW,QAAA,eACIb,OAAA;MAAKc,SAAS,EAAC,UAAU;MAAAD,QAAA,eACrBb,OAAA;QAAKc,SAAS,EAAC,MAAM;QAAAD,QAAA,gBACjBb,OAAA;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNlB,OAAA;UAAIc,SAAS,EAAC,SAAS;UAAAD,QAAA,EAAC;QAAuB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpDlB,OAAA;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNlB,OAAA;UAAOmB,IAAI,EAAC,MAAM;UAACC,IAAI,EAAC,MAAM;UAACC,QAAQ,EAAEd,IAAK;UAACI,KAAK,EAAEJ,IAAI,CAACD,OAAQ;UAACgB,WAAW,EAAC,eAAe;UAACR,SAAS,EAAC,KAAK;UAACS,YAAY,EAAC;QAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrIlB,OAAA;UAAQc,SAAS,EAAC,KAAK;UAACU,OAAO,EAAEZ,OAAQ;UAAAC,QAAA,EAAC;QAAG;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtDlB,OAAA;UAAAa,QAAA,eACIb,OAAA;YAAAa,QAAA,EAAKD;UAAO;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACR,CAAC;AAEX,CAAC;AAAAd,EAAA,CA9BKD,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AAgCV,eAAeA,IAAI;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}